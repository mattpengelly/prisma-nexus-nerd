generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Access {
  id          Int     @default(autoincrement()) @id
  name        String
  abbr        String?
  test_access Boolean
}

model Account {
  id                                            Int            @default(autoincrement()) @id
  acct_num                                      String         @unique
  status                                        Account_status @default(Active)
  advisor_id                                    Int
  lead_creator_id                               Int
  contact_primary_id                            Int
  contact_secondary_id                          Int?
  location_id                                   Int
  from_lead_id                                  Int?
  type                                          Account_type   @default(Residential)
  organization_id                               Int            @default(1)
  test_acct                                     Boolean
  additional_location                           String?
  stage                                         Account_stage
  lead_campaign_id                              Int?
  account_creator_id                            Int
  User_Account_account_creator_idToUser         User           @relation("Account_account_creator_idToUser", fields: [account_creator_id], references: [id])
  User_Account_advisor_idToUser                 User           @relation("Account_advisor_idToUser", fields: [advisor_id], references: [id])
  Contact_Account_contact_primary_idToContact   Contact        @relation("Account_contact_primary_idToContact", fields: [contact_primary_id], references: [id])
  Contact_Account_contact_secondary_idToContact Contact?       @relation("Account_contact_secondary_idToContact", fields: [contact_secondary_id], references: [id])
  Lead                                          Lead?          @relation(fields: [from_lead_id], references: [id])
  LeadCampaign                                  LeadCampaign?  @relation(fields: [lead_campaign_id], references: [id])
  User_Account_lead_creator_idToUser            User           @relation("Account_lead_creator_idToUser", fields: [lead_creator_id], references: [id])
  Location                                      Location       @relation(fields: [location_id], references: [id])
  Company                                       Company        @relation(fields: [organization_id], references: [id])
  Assessment                                    Assessment[]

  @@index([contact_primary_id], name: "contact_primary_id")
  @@index([contact_secondary_id], name: "contact_secondary_id")
  @@index([account_creator_id], name: "creator_id")
  @@index([from_lead_id], name: "from_lead_id")
  @@index([lead_campaign_id], name: "lead_campaign_id")
  @@index([lead_creator_id], name: "lead_creator_id")
  @@index([location_id], name: "location_id")
  @@index([organization_id], name: "organization_name_id")
  @@index([advisor_id], name: "owner_id")
}

model AccountMarketingTag {
  id          Int     @default(autoincrement()) @id
  name        String
  description String?
}

model AccountNote {
  id            Int              @default(autoincrement()) @id
  type          AccountNote_type
  note_content  String
  added_by_id   Int
  important_pin Boolean
  User          User             @relation(fields: [added_by_id], references: [id])

  @@index([added_by_id], name: "added_by_id")
}

model Assessment {
  id               Int                @default(autoincrement()) @id
  lead_id          Int?
  account_id       Int?
  date_assessed    DateTime           @default(now())
  assessor_id      Int
  lead_campaign_id Int?
  Account          Account?           @relation(fields: [account_id], references: [id])
  User             User               @relation(fields: [assessor_id], references: [id])
  Lead             Lead?              @relation(fields: [lead_id], references: [id])
  AssessmentAnswer AssessmentAnswer[]

  @@index([account_id], name: "account_id")
  @@index([assessor_id], name: "assessor_id")
  @@index([lead_id], name: "lead_id")
}

model AssessmentAnswer {
  id                 Int                @default(autoincrement()) @id
  assessment_id      Int
  question_id        Int
  phrasing_id        Int
  answer             String?
  Assessment         Assessment         @relation(fields: [assessment_id], references: [id])
  AssessmentPhrasing AssessmentPhrasing @relation(fields: [phrasing_id], references: [id])
  AssessmentQuestion AssessmentQuestion @relation(fields: [question_id], references: [id])

  @@index([assessment_id], name: "assessment_id")
  @@index([phrasing_id], name: "phrasing_id")
  @@index([question_id], name: "question_id")
}

model AssessmentPhrasing {
  id                                                                            Int                 @default(autoincrement()) @id
  question_id                                                                   Int
  phrasing                                                                      String?
  related_info                                                                  String?
  AssessmentQuestion_AssessmentPhrasing_question_idToAssessmentQuestion         AssessmentQuestion  @relation("AssessmentPhrasing_question_idToAssessmentQuestion", fields: [question_id], references: [id])
  AssessmentAnswer                                                              AssessmentAnswer[]
  AssessmentQuestion_AssessmentPhrasingToAssessmentQuestion_current_phrasing_id AssessmentQuestion? @relation("AssessmentPhrasingToAssessmentQuestion_current_phrasing_id")

  @@index([question_id], name: "question_id")
}

model AssessmentQuestion {
  id                                                                            Int                    @default(autoincrement()) @id
  question                                                                      String?
  current_phrasing_id                                                           Int?                   @unique
  info_type                                                                     String?
  answer_type                                                                   String?
  required                                                                      Boolean?
  enum                                                                          String?
  category                                                                      String?
  AssessmentPhrasing_AssessmentPhrasingToAssessmentQuestion_current_phrasing_id AssessmentPhrasing?    @relation("AssessmentPhrasingToAssessmentQuestion_current_phrasing_id", fields: [current_phrasing_id], references: [id])
  AssessmentAnswer                                                              AssessmentAnswer[]
  AssessmentPhrasing_AssessmentPhrasing_question_idToAssessmentQuestion         AssessmentPhrasing[]   @relation("AssessmentPhrasing_question_idToAssessmentQuestion")
  EnumAssessmentAnswer                                                          EnumAssessmentAnswer[]
}

model Company {
  id            Int            @default(autoincrement()) @id
  name          String
  active        Boolean
  parent_co     Int?
  test_co       Boolean
  Company       Company?       @relation("CompanyToCompany_parent_co", fields: [parent_co], references: [id])
  Account       Account[]
  other_Company Company[]      @relation("CompanyToCompany_parent_co")
  LeadCampaign  LeadCampaign[]
  User          User[]

  @@index([parent_co], name: "parent_co")
}

model Contact {
  id                                            Int                            @default(autoincrement()) @id
  first_name                                    String
  legal_first_name                              String?
  middle_name                                   String?
  last_name                                     String
  suffix                                        String?
  primary_location_id                           Int?
  additional_location                           String?
  phone_cell                                    String                         @unique
  phone_home                                    String?
  email_one                                     String                         @unique
  email_two                                     String?
  test_contact                                  Boolean
  marketing_qualified                           Boolean                        @default(true)
  sales_qualified                               Boolean                        @default(true)
  marketing_callable                            Boolean?
  marketing_textable                            Boolean?
  marketing_emailable                           Boolean?
  spanish_speaker                               Boolean?
  preferred_first_name                          String?
  marketing_tag_collection                      String?
  notification_preference_text                  Boolean?
  notification_preference_call                  Boolean?
  notification_preference_email                 Boolean?
  sales_disqual_reason_id                       Int?
  lead_campaign_disqual_reason_id               Int?
  marketing_disqual_reason_id                   Int?
  EnumLeadCampaignDisqualReason                 EnumLeadCampaignDisqualReason? @relation(fields: [lead_campaign_disqual_reason_id], references: [id])
  EnumMarketingDisqualReason                    EnumMarketingDisqualReason?    @relation(fields: [marketing_disqual_reason_id], references: [id])
  Location                                      Location?                      @relation(fields: [primary_location_id], references: [id])
  EnumSalesDisqualReason                        EnumSalesDisqualReason?        @relation(fields: [sales_disqual_reason_id], references: [id])
  Account_Account_contact_primary_idToContact   Account[]                      @relation("Account_contact_primary_idToContact")
  Account_Account_contact_secondary_idToContact Account[]                      @relation("Account_contact_secondary_idToContact")

  @@index([lead_campaign_disqual_reason_id], name: "lead_campaign_disqual_reason_id")
  @@index([marketing_disqual_reason_id], name: "marketing_disqual_reason_id")
  @@index([primary_location_id], name: "primary_location_id")
  @@index([sales_disqual_reason_id], name: "sales_disqual_reason_id")
}

model ContactCommunicationLog {
  id                          Int                               @default(autoincrement()) @id
  date                        DateTime
  contact_comm_dispo_id       Int
  callback_requested          Boolean                           @default(false)
  log_creator_id              Int
  contact_comm_type_id        Int
  note                        String
  direction                   ContactCommunicationLog_direction
  callback_datetime_requested DateTime?
  is_callback                 Boolean?
  EnumContactCommDispo        EnumContactCommDispo              @relation(fields: [contact_comm_dispo_id], references: [id])
  EnumCommunicationType       EnumCommunicationType             @relation(fields: [contact_comm_type_id], references: [id])
  User                        User                              @relation(fields: [log_creator_id], references: [id])

  @@index([contact_comm_dispo_id], name: "contact_comm_dispo_id")
  @@index([contact_comm_type_id], name: "contact_comm_type_id")
  @@index([log_creator_id], name: "log_creator_id")
}

model DNC {
  id      Int  @default(autoincrement()) @id
  lead_id Int?
}

model EnumAgreementApprovalStep {
  id          Int           @default(autoincrement()) @id
  name        String
  Opportunity Opportunity[]
}

model EnumAssessmentAnswer {
  id                 Int                 @default(autoincrement()) @id
  question_id        Int?
  choice             String?
  image              String?
  AssessmentQuestion AssessmentQuestion? @relation(fields: [question_id], references: [id])

  @@index([question_id], name: "question_id")
}

model EnumCommunicationType {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  description             String?
  ContactCommunicationLog ContactCommunicationLog[]
  LeadWorkingEventLog     LeadWorkingEventLog[]
}

model EnumContactCommDispo {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  description             String?
  ContactCommunicationLog ContactCommunicationLog[]
}

model EnumLeadCampaignDisqualReason {
  id      Int       @id
  name    String
  Contact Contact[]
  Lead    Lead[]
}

model EnumLeadWorkingEventDispo {
  id                  Int                   @default(autoincrement()) @id
  name                String
  description         String?
  LeadWorkingEventLog LeadWorkingEventLog[]
}

model EnumMarketingDisqualReason {
  id      Int       @default(autoincrement()) @id
  name    String
  Contact Contact[]
  Lead    Lead[]
}

model EnumPresentationResultDispo {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  description             String?
  PresentationAppointment PresentationAppointment[]
}

model EnumSalesDisqualReason {
  id      Int       @default(autoincrement()) @id
  name    String
  Contact Contact[]
}

model EnumStateAbbr {
  id   Int     @default(autoincrement()) @id
  abbr String?
  name String?
}

model EnumTaskType {
  id          Int     @default(autoincrement()) @id
  name        String
  description String?
  Task        Task[]
}

model FinanceCompany {
  id   Int     @default(autoincrement()) @id
  name String?
}

model FinanceLog {
  id          Int      @default(autoincrement()) @id
  placeholder Boolean?
}

model FinanceRatePlan {
  id              Int      @default(autoincrement()) @id
  finance_company String?
  term_name       String?
  term_length     String?
  apr             String?
  interest_only   String?
  post_incentive  String?
  no_incentive    String?
  dealer_points   String?
  default_rate    String?
  finance_fee     String?
  base_fee        String?
  customer_fee    String?
  active          Boolean?
}

model Group {
  id          Int     @default(autoincrement()) @id
  name        String
  type        String?
  email       String?
  parent_id   Int?
  Group       Group?  @relation("GroupToGroup_parent_id", fields: [parent_id], references: [id])
  other_Group Group[] @relation("GroupToGroup_parent_id")
  Task        Task[]

  @@index([parent_id], name: "parent_id")
}

model Inventory {
  id                  Int            @default(autoincrement()) @id
  type                Inventory_type
  category            String
  name                String
  detail              String?
  active              Boolean
  model_number        String?
  manufacturer        String?
  description         String?
  date_added          DateTime?
  type_subtype        String?
  reference_name      String?
  info_card_link      String?
  warranty_card_link  String?
  color               String?
  watts               String?
  watts_ptc           String?
  volts               String?
  inverter_monitoring String?
  inverter_size_kw    String?
  battery_size_kw     String?
  date_updated        DateTime?
}

model Lead {
  id                                Int                            @default(autoincrement()) @id
  first_name                        String
  legal_first_name                  String?
  middle_name                       String?
  last_name                         String
  address_one                       String?
  suffix                            String?
  address_two                       String?
  city                              String?
  state_abbr                        String?
  zip                               String?
  gate_code                         String?
  latitude                          String?                        @default("NULL")
  longitude                         String?                        @default("NULL")
  address_verified                  Boolean                        @default(false)
  email_one                         String?                        @unique
  email_two                         String?
  phone_cell                        String?                        @unique
  phone_home                        String?
  stage                             Lead_stage                     @default(New)
  lead_creator_id                   Int?
  lead_owner_id                     Int?
  test_lead                         Boolean                        @default(false)
  lead_campaign_id                  Int                            @default(4)
  marketing_qualified               Boolean                        @default(true)
  lead_marketing_tag_collection     String?
  assessment_complete               Boolean?                       @default(false)
  marketing_callable                Boolean?                       @default(true)
  marketing_textable                Boolean?                       @default(true)
  marketing_emailble                Boolean?                       @default(true)
  notification_preference_email     Boolean?
  notification_preference_text      Boolean?
  notification_preference_call      Boolean?
  lead_converter_id                 Int?
  lead_campaign_disqual_reason_id   Int?
  marketing_disqual_reason_id       Int?
  EnumLeadCampaignDisqualReason     EnumLeadCampaignDisqualReason? @relation(fields: [lead_campaign_disqual_reason_id], references: [id])
  LeadCampaign                      LeadCampaign                   @relation(fields: [lead_campaign_id], references: [id])
  User_Lead_lead_converter_idToUser User?                          @relation("Lead_lead_converter_idToUser", fields: [lead_converter_id], references: [id])
  User_Lead_lead_creator_idToUser   User?                          @relation("Lead_lead_creator_idToUser", fields: [lead_creator_id], references: [id])
  User_Lead_lead_owner_idToUser     User?                          @relation("Lead_lead_owner_idToUser", fields: [lead_owner_id], references: [id])
  EnumMarketingDisqualReason        EnumMarketingDisqualReason?    @relation(fields: [marketing_disqual_reason_id], references: [id])
  Account                           Account[]
  Assessment                        Assessment[]
  LeadWorkingEventLog               LeadWorkingEventLog[]

  @@index([lead_campaign_disqual_reason_id], name: "lead_campaign_disqual_reason_id")
  @@index([lead_campaign_id], name: "lead_campaign_id")
  @@index([lead_converter_id], name: "lead_converter_id")
  @@index([lead_creator_id], name: "lead_creator_id")
  @@index([lead_owner_id], name: "lead_owner_id")
  @@index([marketing_disqual_reason_id], name: "marketing_disqual_reason_id")
}

model LeadCampaign {
  id                   Int                          @default(autoincrement()) @id
  name                 String
  active               Boolean
  lead_direction       LeadCampaign_lead_direction?
  lead_source_id       Int
  company_id           Int?
  test_lead_campaign   Boolean
  default_for_lead_src Boolean?                     @default(false)
  Company              Company?                     @relation(fields: [company_id], references: [id])
  LeadSource           LeadSource                   @relation(fields: [lead_source_id], references: [id])
  Account              Account[]
  Lead                 Lead[]

  @@index([company_id], name: "company_id")
  @@index([lead_source_id], name: "lead_source_id")
}

model LeadMarketingTag {
  id          Int     @default(autoincrement()) @id
  name        String
  description String?
}

model LeadSource {
  id               Int            @default(autoincrement()) @id
  name             String
  abbr             String
  active           Boolean
  type             String?
  test_lead_source Boolean
  LeadCampaign     LeadCampaign[]
}

model LeadWorkingEventLog {
  id                        Int                       @default(autoincrement()) @id
  comm_type_id              Int
  lead_id                   Int
  lwe_dispo_id              Int
  notes                     String?
  lwe_log_creator_id        Int
  event_timestamp           DateTime                  @default(dbgenerated())
  test_log_entry            Boolean                   @default(false)
  EnumCommunicationType     EnumCommunicationType     @relation(fields: [comm_type_id], references: [id])
  Lead                      Lead                      @relation(fields: [lead_id], references: [id])
  EnumLeadWorkingEventDispo EnumLeadWorkingEventDispo @relation(fields: [lwe_dispo_id], references: [id])
  User                      User                      @relation(fields: [lwe_log_creator_id], references: [id])

  @@index([comm_type_id], name: "comm_type_id")
  @@index([lead_id], name: "lead_id")
  @@index([lwe_dispo_id], name: "lwe_dispo_id")
  @@index([lwe_log_creator_id], name: "lwe_log_creator_id")
}

model Location {
  id                           Int                           @default(autoincrement()) @id
  address_one                  String
  address_two                  String?
  city                         String
  state_abbr                   String
  zip                          String
  latitude                     Float?
  longitude                    Float?
  gate_code                    String?
  test_location                Boolean
  square_feet                  Int?
  stories                      Int?
  assessment_id                Int?
  ahj_id                       Int?
  year_built                   Int?
  HOA                          Boolean?
  building_type                Location_building_type?
  zzz___AssessmentAnswer___old zzz___AssessmentAnswer___old? @relation(fields: [assessment_id], references: [id])
  Account                      Account[]
  Contact                      Contact[]

  @@index([assessment_id], name: "assessment_id")
}

model Office {
  id            Int         @default(autoincrement()) @id
  name          String
  address_one   String
  address_two   String?
  city          String
  zip           String
  state_abbr    String
  latitude      String?
  longitude     String?
  has_warehouse Boolean
  test_office   Boolean
  SalesTeam     SalesTeam[]
}

model Opportunity {
  id                                   Int                                         @default(autoincrement()) @id
  status                               Opportunity_status                          @default(Active)
  stage                                Opportunity_stage?
  creator_id                           Int
  updated_by_id                        Int?
  total_amount                         Int?
  products_id                          String?
  credit_tier                          Opportunity_credit_tier?
  amended_from_id                      Int?
  solar_design_steps                   Opportunity_solar_design_steps?
  presentation_appointment_stage       Opportunity_presentation_appointment_stage?
  agreement_approval_step              Int?
  EnumAgreementApprovalStep            EnumAgreementApprovalStep?                  @relation(fields: [agreement_approval_step], references: [id])
  Opportunity                          Opportunity?                                @relation("OpportunityToOpportunity_amended_from_id", fields: [amended_from_id], references: [id])
  User_Opportunity_creator_idToUser    User                                        @relation("Opportunity_creator_idToUser", fields: [creator_id], references: [id])
  User_Opportunity_updated_by_idToUser User?                                       @relation("Opportunity_updated_by_idToUser", fields: [updated_by_id], references: [id])
  other_Opportunity                    Opportunity[]                               @relation("OpportunityToOpportunity_amended_from_id")
  PresentationAppointment              PresentationAppointment[]

  @@index([amended_from_id], name: "amended_from_id")
  @@index([creator_id], name: "creator_id")
  @@index([agreement_approval_step], name: "purchase_agreement_stage")
  @@index([updated_by_id], name: "updated_by_id")
}

model OpportunityProduct {
  id                  Int                     @default(autoincrement()) @id
  name                String
  type                OpportunityProduct_type
  type_detail         String?
  description         String?
  model_number        String
  active              Boolean
  marketing_matrix    Int?
  manufacturer        String?
  color               String?
  warranty_info       String?
  watts               String?
  watts_ptc           String?
  volts               String?
  amps                String?
  energy              String?
  power               String?
  inverter_monitoring String?
  date_added          String?
  date_updated        String?
  inventory_id        String?
  inverter_size_kw    String?
  battery_size_kw     String?
  battery_power_kw    String?
  battery_energy_kw   String?
  info_card_link      String?
}

model PresentationAppointment {
  id                                                                                              Int                                    @default(autoincrement()) @id
  appointment_datetime                                                                            DateTime
  presentation_dispo_id                                                                           Int                                    @default(1)
  note                                                                                            String?
  is_reschedule                                                                                   Boolean
  presenter_id                                                                                    Int
  dispositioner_id                                                                                Int?
  opportunity_id                                                                                  Int?
  presented_type                                                                                  PresentationAppointment_presented_type @default(In_Person)
  rescheduled_to                                                                                  Int?
  rescheduled_from                                                                                Int?
  rescheduled_by                                                                                  Int?
  created_by                                                                                      Int
  User_PresentationAppointment_created_byToUser                                                   User                                   @relation("PresentationAppointment_created_byToUser", fields: [created_by], references: [id])
  User_PresentationAppointment_dispositioner_idToUser                                             User?                                  @relation("PresentationAppointment_dispositioner_idToUser", fields: [dispositioner_id], references: [id])
  Opportunity                                                                                     Opportunity?                           @relation(fields: [opportunity_id], references: [id])
  EnumPresentationResultDispo                                                                     EnumPresentationResultDispo            @relation(fields: [presentation_dispo_id], references: [id])
  User_PresentationAppointment_presenter_idToUser                                                 User                                   @relation("PresentationAppointment_presenter_idToUser", fields: [presenter_id], references: [id])
  User_PresentationAppointment_rescheduled_byToUser                                               User?                                  @relation("PresentationAppointment_rescheduled_byToUser", fields: [rescheduled_by], references: [id])
  PresentationAppointment_PresentationAppointmentToPresentationAppointment_rescheduled_from       PresentationAppointment?               @relation("PresentationAppointmentToPresentationAppointment_rescheduled_from", fields: [rescheduled_from], references: [id])
  PresentationAppointment_PresentationAppointmentToPresentationAppointment_rescheduled_to         PresentationAppointment?               @relation("PresentationAppointmentToPresentationAppointment_rescheduled_to", fields: [rescheduled_to], references: [id])
  other_PresentationAppointment_PresentationAppointmentToPresentationAppointment_rescheduled_from PresentationAppointment[]              @relation("PresentationAppointmentToPresentationAppointment_rescheduled_from")
  other_PresentationAppointment_PresentationAppointmentToPresentationAppointment_rescheduled_to   PresentationAppointment[]              @relation("PresentationAppointmentToPresentationAppointment_rescheduled_to")

  @@index([created_by], name: "created_by")
  @@index([dispositioner_id], name: "dispositioner_id")
  @@index([opportunity_id], name: "opportunity_id")
  @@index([presentation_dispo_id], name: "presentation_dispo_id")
  @@index([presenter_id], name: "presenter_id")
  @@index([rescheduled_by], name: "rescheduled_by")
  @@index([rescheduled_from], name: "rescheduled_from")
  @@index([rescheduled_to], name: "rescheduled_to")
}

model Role {
  id             Int     @default(autoincrement()) @id
  name           String
  default_access String?
  test_role      Boolean
  User           User[]
}

model SalesTeam {
  id                                    Int     @default(autoincrement()) @id
  name                                  String  @unique
  team_lead_one_id                      Int?
  team_lead_two_id                      Int?
  office_id                             Int
  type                                  String
  active                                Boolean
  test_sales_team                       Boolean
  parent_team_id                        Int?
  child_team_id                         Int?
  avatar_link                           String?
  Office                                Office  @relation(fields: [office_id], references: [id])
  User_SalesTeam_team_lead_one_idToUser User?   @relation("SalesTeam_team_lead_one_idToUser", fields: [team_lead_one_id], references: [id])
  User_SalesTeamToUser_team_id          User[]  @relation("SalesTeamToUser_team_id")

  @@index([office_id], name: "office_id")
  @@index([team_lead_one_id], name: "team_lead_one_id")
}

model SmartReportSnapshot {
  id             Int @default(autoincrement()) @id
  opportunity_id Int
}

model Task {
  id                              Int           @default(autoincrement()) @id
  creator_id                      Int?
  type_id                         Int
  priority                        Task_priority
  due_date                        DateTime
  note_content                    String
  date_updated                    DateTime?
  updated_by_id                   Int?
  assigned_to_id                  Int?
  assigned_to_group               Int?
  complete                        Boolean       @default(false)
  completed_date                  DateTime?
  completed_by_id                 Int?
  Group                           Group?        @relation(fields: [assigned_to_group], references: [id])
  User_Task_assigned_to_idToUser  User?         @relation("Task_assigned_to_idToUser", fields: [assigned_to_id], references: [id])
  User_Task_completed_by_idToUser User?         @relation("Task_completed_by_idToUser", fields: [completed_by_id], references: [id])
  User_Task_creator_idToUser      User?         @relation("Task_creator_idToUser", fields: [creator_id], references: [id])
  EnumTaskType                    EnumTaskType  @relation(fields: [type_id], references: [id])
  User_Task_updated_by_idToUser   User?         @relation("Task_updated_by_idToUser", fields: [updated_by_id], references: [id])

  @@index([assigned_to_group], name: "assigned_to_group")
  @@index([assigned_to_id], name: "assigned_to_id")
  @@index([completed_by_id], name: "completed_by_id")
  @@index([creator_id], name: "creator_id")
  @@index([type_id], name: "type_id")
  @@index([updated_by_id], name: "updated_by_id")
}

model TMY3Baseline {
  id             Int     @default(autoincrement()) @id
  area           String?
  month_baseline String?
  year_total     String?
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled.
// model tmy3_data {
  // id       Int?
  // area     String?
  // hour     Int?
  // day      Int?
  // month    Int?
  // kw_usage Float?
// }

model User {
  id                                                                         Int                            @default(autoincrement()) @id
  first_name                                                                 String
  preferred_first_name                                                       String?
  avatar_link                                                                String?
  last_name                                                                  String
  suffix                                                                     String?
  phone_cell                                                                 String
  phone_cell_carrier                                                         String?
  phone_home                                                                 String?
  email_personal                                                             String
  email_nerd                                                                 String                         @unique
  security_pin                                                               Int?
  third_party_ids                                                            String?
  team_id                                                                    Int
  role_id                                                                    Int
  access                                                                     String?
  entity_type                                                                String?
  company_id                                                                 Int
  address_one                                                                String?
  address_two                                                                String?
  city                                                                       String?
  zip                                                                        String?
  state_abbr                                                                 String?
  payroll_id                                                                 Int?
  employment_status                                                          Boolean
  test_user                                                                  Boolean
  created_by                                                                 Int?
  referred_by                                                                Int?
  Company                                                                    Company                        @relation(fields: [company_id], references: [id])
  Role                                                                       Role                           @relation(fields: [role_id], references: [id])
  SalesTeam_SalesTeamToUser_team_id                                          SalesTeam                      @relation("SalesTeamToUser_team_id", fields: [team_id], references: [id])
  Account_Account_account_creator_idToUser                                   Account[]                      @relation("Account_account_creator_idToUser")
  Account_Account_advisor_idToUser                                           Account[]                      @relation("Account_advisor_idToUser")
  Account_Account_lead_creator_idToUser                                      Account[]                      @relation("Account_lead_creator_idToUser")
  AccountNote                                                                AccountNote[]
  Assessment                                                                 Assessment[]
  ContactCommunicationLog                                                    ContactCommunicationLog[]
  Lead_Lead_lead_converter_idToUser                                          Lead[]                         @relation("Lead_lead_converter_idToUser")
  Lead_Lead_lead_creator_idToUser                                            Lead[]                         @relation("Lead_lead_creator_idToUser")
  Lead_Lead_lead_owner_idToUser                                              Lead[]                         @relation("Lead_lead_owner_idToUser")
  LeadWorkingEventLog                                                        LeadWorkingEventLog[]
  Opportunity_Opportunity_creator_idToUser                                   Opportunity[]                  @relation("Opportunity_creator_idToUser")
  Opportunity_Opportunity_updated_by_idToUser                                Opportunity[]                  @relation("Opportunity_updated_by_idToUser")
  PresentationAppointment_PresentationAppointment_created_byToUser           PresentationAppointment[]      @relation("PresentationAppointment_created_byToUser")
  PresentationAppointment_PresentationAppointment_dispositioner_idToUser     PresentationAppointment[]      @relation("PresentationAppointment_dispositioner_idToUser")
  PresentationAppointment_PresentationAppointment_presenter_idToUser         PresentationAppointment[]      @relation("PresentationAppointment_presenter_idToUser")
  PresentationAppointment_PresentationAppointment_rescheduled_byToUser       PresentationAppointment[]      @relation("PresentationAppointment_rescheduled_byToUser")
  SalesTeam_SalesTeam_team_lead_one_idToUser                                 SalesTeam[]                    @relation("SalesTeam_team_lead_one_idToUser")
  Task_Task_assigned_to_idToUser                                             Task[]                         @relation("Task_assigned_to_idToUser")
  Task_Task_completed_by_idToUser                                            Task[]                         @relation("Task_completed_by_idToUser")
  Task_Task_creator_idToUser                                                 Task[]                         @relation("Task_creator_idToUser")
  Task_Task_updated_by_idToUser                                              Task[]                         @relation("Task_updated_by_idToUser")
  zzz___AssessmentAnswer___old_UserTozzz___AssessmentAnswer___old_creator_id zzz___AssessmentAnswer___old[] @relation("UserTozzz___AssessmentAnswer___old_creator_id")
  zzz___AssessmentAnswer___old_UserTozzz___AssessmentAnswer___old_updater_id zzz___AssessmentAnswer___old[] @relation("UserTozzz___AssessmentAnswer___old_updater_id")

  @@index([company_id], name: "company_id")
  @@index([role_id], name: "role_id")
  @@index([team_id], name: "team_id")
}

model UtilityCompany {
  id                             Int                            @default(autoincrement()) @id
  name                           String
  abbreviation                   String
  type                           UtilityCompany_type
  state                          String
  phone                          String?
  contact_name                   String?
  net_metering                   Boolean
  interconnection_online         Boolean?
  solar_specific_plan            Boolean?
  max_residential_system_size    Boolean?
  rebate_program                 Boolean?
  rebate_program_id              String?
  inked_interconnection_required Boolean?
  preferred_installer_exists     Boolean?
  preferred_installer_on_list    Boolean?
  dso_estimate                   String?
  zzz___AssessmentAnswer___old   zzz___AssessmentAnswer___old[]
}

model UtilityRatePlan {
  id                   Int      @default(autoincrement()) @id
  utility_abbr         String
  utility_name         String?
  rate_plan            String?
  state                String?
  account_fee          String?
  tax                  String?
  buy_back_rate        String?
  minimum_bill         String?
  demand_tier          String?
  tier_one_peak        String?
  tier_two_peak        String?
  tier_three_peak      String?
  tier_one_offpeak     String?
  tier_two_offpeak     String?
  tier_three_offpeak   String?
  tier_one_superpeak   String?
  tier_two_superpeak   String?
  tier_three_superpeak String?
  demand_rate_one      String?
  demand_rate_two      String?
  demand_rate_three    String?
  peak_start_hour      String?
  peak_end_hour        String?
  peak_two_start_hour  String?
  peak_two_end_hour    String?
  superpeak_start_hour String?
  superpeak_end_hour   String?
  tier_one_ceiling     String?
  tier_two_ceiling     String?
  kwh_add_fee          String?
  solar_kw_fee         String?
  solar_eligible       String?
  pre_solar_default    Boolean?
  post_solar_default   Boolean?
  active               Boolean?
}

model UtilityRebateProgram {
  id                    Int                                @default(autoincrement()) @id
  product_type          UtilityRebateProgram_product_type?
  product_id            Int?
  date_added_by_company DateTime?
  date_expires          DateTime?
  active                Boolean?
  description           String?
}

model UtilityRegion {
  id                       Int     @default(autoincrement()) @id
  utility_company          String?
  utility_name             String?
  region_label             String?
  baseline_summer          String?
  baseline_summer_electric String?
  baseline_winter          String?
  baseline_winter_electric String?
}

model zzz___AssessmentAnswer___old {
  id                                                 Int                                                              @default(autoincrement()) @id
  date_created                                       DateTime?
  creator_id                                         Int
  home_ownership                                     Boolean?
  existing_solar_size_kw                             Int?
  existing_solar_image                               String?
  test_assessment                                    Boolean?
  date_updated                                       DateTime?
  updater_id                                         Int?
  existing_solar                                     Boolean?
  existing_solar_install_or_purchase                 zzz___AssessmentAnswer___old_existing_solar_install_or_purchase?
  roof_age_year                                      Int?
  roof_condition                                     zzz___AssessmentAnswer___old_roof_condition?
  ac_unit_quantity                                   Int?
  ac_unit_type                                       String?
  ac_unit_condition                                  zzz___AssessmentAnswer___old_ac_unit_condition?
  ac_unit_age_year                                   Int?
  has_pool                                           Boolean?
  existing_duct_seal_condition                       zzz___AssessmentAnswer___old_existing_duct_seal_condition?
  existing_pool_variable_speed_pump                  Boolean?
  existing_led_amount                                zzz___AssessmentAnswer___old_existing_led_amount?
  existing_thermostat_type                           zzz___AssessmentAnswer___old_existing_thermostat_type?
  insulation_ee_standards_past_five_yrs              Boolean?
  existing_insulation_year                           Int?
  existing_duct_seal                                 Boolean?
  lighting_efficiency                                zzz___AssessmentAnswer___old_lighting_efficiency?
  thermostat_quantity                                Int?
  has_wifi                                           Boolean?
  existing_insulation_condition                      zzz___AssessmentAnswer___old_existing_insulation_condition?
  existing_duct_seal_year                            Int?
  existing_solar_install_year                        Int?
  existing_solar_condition                           zzz___AssessmentAnswer___old_existing_solar_condition?
  existing_air_seal                                  Boolean?
  existing_air_seal_age                              Int?
  existing_air_seal_condition                        zzz___AssessmentAnswer___old_existing_air_seal_condition?
  utility_company                                    Int?
  utility_rate_plan                                  Int?
  utility_bill_kWh_months_detail                     String?
  utility_bill_cost_months_detail                    String?
  utility_bill_avg_kWh_annual                        Int?
  utility_bill_avg_cost_annual                       Int?
  utility_bill_avg_kWh_month                         Int?
  utility_bill_avg_cost_month                        Int?
  utility_bill_img                                   String?
  utility_bill_graph_img                             String?
  utility_bill_other_img                             String?
  water_heater_type                                  zzz___AssessmentAnswer___old_water_heater_type?
  water_heater_condition                             zzz___AssessmentAnswer___old_water_heater_condition?
  water_heater_age_year                              Int?
  asbestos_present                                   Boolean?
  existing_battery                                   Boolean?
  existing_battery_type                              String?
  existing_battery_age_year                          Int?
  existing_battery_quantity                          Int?
  existing_solar_detail                              String?
  existing_dryer                                     Boolean?
  existing_dryer_type                                zzz___AssessmentAnswer___old_existing_dryer_type?
  existing_dryer_condition                           zzz___AssessmentAnswer___old_existing_dryer_condition?
  existing_dryer_age_year                            Int?
  electric_vehicle                                   Boolean?
  existing_ev_charger                                Boolean?
  existing_ev_charger_type                           String?
  existing_ev_charger_condition                      zzz___AssessmentAnswer___old_existing_ev_charger_condition?
  existing_ev_charger_age_year                       Int?
  existing_ev_charger_detail                         String?
  existing_pearl_certification                       Boolean?
  existing_pearl_cert_detail                         String?
  existing_production_monitoring                     Boolean?
  existing_consumption_monitoring                    Boolean?
  existing_production_monitoring_detail              String?
  existing_consumption_monitoring_detail             String?
  existing_ozone_system                              Boolean?
  living_environment_sealed                          Boolean?
  indoor_air_quality_important                       Boolean?
  backup_power_interest                              Boolean?
  square_footage_customer_est                        Int?
  moving_in_next_12month                             Int?
  hoa                                                Boolean?
  home_built_year                                    Int?
  home_stories_tall                                  Int?
  roof_flat_or_pitch                                 zzz___AssessmentAnswer___old_roof_flat_or_pitch?
  roof_material                                      zzz___AssessmentAnswer___old_roof_material?
  ev_next_five_year_delta_est                        zzz___AssessmentAnswer___old_ev_next_five_year_delta_est?
  existing_pool_remote_features                      Boolean?
  thermostat_winter_avg_estimate                     Int?
  thermostat_summer_avg_estimate                     Int?
  pay_federal_taxes                                  Int?
  existing_solar_own_lease_ppa                       zzz___AssessmentAnswer___old_existing_solar_own_lease_ppa?
  existing_solar_cover_utility_bill                  Boolean?
  existing_solar_monitoring_type                     String?
  lead_id                                            Int?
  opportunity_id                                     Int?
  User_UserTozzz___AssessmentAnswer___old_creator_id User                                                             @relation("UserTozzz___AssessmentAnswer___old_creator_id", fields: [creator_id], references: [id])
  User_UserTozzz___AssessmentAnswer___old_updater_id User?                                                            @relation("UserTozzz___AssessmentAnswer___old_updater_id", fields: [updater_id], references: [id])
  UtilityCompany                                     UtilityCompany?                                                  @relation(fields: [utility_company], references: [id])
  Location                                           Location[]

  @@index([creator_id], name: "creator_id")
  @@index([updater_id], name: "updater_id")
  @@index([utility_company], name: "utility_company")
  @@map("zzz - AssessmentAnswer - old")
}

model zzz___AssessmentQuestion___old {
  id                Int      @default(autoincrement()) @id
  question          String
  related_info_text String?
  description       String?
  related_products  String?
  active            Boolean  @default(true)
  primary_tier      Boolean?
  secondary_tier    Boolean?
  follow_up         Boolean?

  @@map("zzz - AssessmentQuestion - old")
}

enum Account_status {
  Active
  Hold
  Cancelled
}

enum Account_type {
  Residential
  Commercial
}

enum Account_stage {
  PreQualification
  Qualification
  Opportunity
  Project
  Service
}

enum AccountNote_type {
  Update
  Redesign
}

enum ContactCommunicationLog_direction {
  Inbound
  Outbound
}

enum Inventory_type {
  Solar_Spec_ @map("Solar Spec.")
  Monitoring
}

enum Lead_stage {
  New
  Working
  Converted
  Lost
}

enum LeadCampaign_lead_direction {
  Inbound
  Outbound
}

enum Location_building_type {
  Single_Family @map("Single Family")
  Manufactured
  Condo
  Duplex
  Townhome
  Tiny_Home @map("Tiny Home")
  Other
}

enum Opportunity_status {
  Active
  Hold
  Closed___Won @map("Closed - Won")
  Closed___Lost @map("Closed - Lost")
  Cancelled
}

enum Opportunity_stage {
  Assessment
  Presentation_Appointment @map("Presentation Appointment")
  Purchase_Agreement @map("Purchase Agreement")
}

enum Opportunity_credit_tier {
  Tier_A @map("Tier A")
  Tier_B @map("Tier B")
  Tier_C @map("Tier C")
  Tier_D @map("Tier D")
}

enum Opportunity_solar_design_steps {
  Requested
  In_Progress @map("In Progress")
  Complete
  Re_Deisgn_Requested @map("Re-Deisgn Requested")
  Re_Design_Complete @map("Re-Design Complete")
  Cancelled
}

enum Opportunity_presentation_appointment_stage {
  Unscheduled
  Scheduled
  Needs_to_be_Rescheduled @map("Needs to be Rescheduled")
  Rescheduled
  Complete
  Incomplete
  Cancelled
}

enum OpportunityProduct_type {
  Production
  Reduction
  Storage
  Monitoring
  Service
}

enum PresentationAppointment_presented_type {
  Online
  In_Person @map("In Person")
}

enum Task_priority {
  Low
  Medium
  High
  Critical
}

enum UtilityCompany_type {
  Electric
  Electric_and_Gas @map("Electric and Gas")
  Electric_and_Gas_and_Water @map("Electric and Gas and Water")
  Electric_and_Water @map("Electric and Water")
}

enum UtilityRebateProgram_product_type {
  PV
  Reduction
}

enum zzz___AssessmentAnswer___old_existing_solar_install_or_purchase {
  Installed_by_customer @map("Installed by customer")
  Came_with_home @map("Came with home")

   @@map("zzz - AssessmentAnswer - old_existing_solar_install_or_purchase")
}

enum zzz___AssessmentAnswer___old_roof_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_roof_condition")
}

enum zzz___AssessmentAnswer___old_ac_unit_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_ac_unit_condition")
}

enum zzz___AssessmentAnswer___old_existing_duct_seal_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_duct_seal_condition")
}

enum zzz___AssessmentAnswer___old_existing_led_amount {
  None
  Some
  Most
  All

   @@map("zzz - AssessmentAnswer - old_existing_led_amount")
}

enum zzz___AssessmentAnswer___old_existing_thermostat_type {
  Dial
  Programmable
  Smart

   @@map("zzz - AssessmentAnswer - old_existing_thermostat_type")
}

enum zzz___AssessmentAnswer___old_lighting_efficiency {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_lighting_efficiency")
}

enum zzz___AssessmentAnswer___old_existing_insulation_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_insulation_condition")
}

enum zzz___AssessmentAnswer___old_existing_solar_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_solar_condition")
}

enum zzz___AssessmentAnswer___old_existing_air_seal_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_air_seal_condition")
}

enum zzz___AssessmentAnswer___old_water_heater_type {
  Gas
  Electric
  Tankless

   @@map("zzz - AssessmentAnswer - old_water_heater_type")
}

enum zzz___AssessmentAnswer___old_water_heater_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_water_heater_condition")
}

enum zzz___AssessmentAnswer___old_existing_dryer_type {
  Gas
  Electric

   @@map("zzz - AssessmentAnswer - old_existing_dryer_type")
}

enum zzz___AssessmentAnswer___old_existing_dryer_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_dryer_condition")
}

enum zzz___AssessmentAnswer___old_existing_ev_charger_condition {
  Poor
  Average
  Good
  Excellent

   @@map("zzz - AssessmentAnswer - old_existing_ev_charger_condition")
}

enum zzz___AssessmentAnswer___old_roof_flat_or_pitch {
  Flat
  Pitched

   @@map("zzz - AssessmentAnswer - old_roof_flat_or_pitch")
}

enum zzz___AssessmentAnswer___old_roof_material {
  Shingle
  Spanish_Tile @map("Spanish Tile")
  Concrete
  Wood
  Metal
  Foam
  Asphalt

   @@map("zzz - AssessmentAnswer - old_roof_material")
}

enum zzz___AssessmentAnswer___old_ev_next_five_year_delta_est {
  Going_up @map("Going up")
  Staying_same @map("Staying same")
  Going_down @map("Going down")

   @@map("zzz - AssessmentAnswer - old_ev_next_five_year_delta_est")
}

enum zzz___AssessmentAnswer___old_existing_solar_own_lease_ppa {
  Own
  Lease
  PPA

   @@map("zzz - AssessmentAnswer - old_existing_solar_own_lease_ppa")
}
