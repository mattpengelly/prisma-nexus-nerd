### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Account {
  """ID of account creator"""
  account_creator_id: Int!

  """Account number"""
  acct_num: String!

  """Advisor of account's ID"""
  advisor_id: Int!
  Company: Company
  Contact_Account_contact_primary_idToContact: Contact
  Contact_Account_contact_secondary_idToContact: Contact

  """Primary Contact ID"""
  contact_primary_id: Int!

  """Secondary Contact ID"""
  contact_secondary_id: Int

  """ID of lead account came from"""
  from_lead_id: Int!

  """Id of the account"""
  id: Int!
  Lead: Lead

  """ID of lead creator"""
  lead_creator_id: Int!
  Location: Location

  """ID of account location"""
  location_id: Int

  """Name of organization associated with account"""
  organization_id: String

  """Account status"""
  status: String!

  """Whether this is a test account"""
  test_account: Boolean

  """Account type"""
  type: String!
  User_Account_account_creator_idToUser: User
  User_Account_advisor_idToUser: User
  User_Account_lead_creator_idToUser: User
}

type Assessment {
  Account: Account

  """Id of the associated account"""
  account_id: Int!
  AssessmentAnswer: [AssessmentAnswer!]

  """Id of the assessor"""
  assessor_id: Int!

  """Date-timestamp of assessment"""
  date_assessed: DateTime!

  """Id of the Assessment"""
  id: Int!
  Lead: Lead

  """Id of the associated lead"""
  lead_id: Int!
  User: User
}

type AssessmentAnswer {
  """Answer"""
  answer: String!
  Assessment: Assessment!

  """Id of the associated assessment"""
  assessment_id: Int!
  AssessmentPhrasing: AssessmentPhrasing!
  AssessmentQuestion: AssessmentQuestion!

  """Id of the Assessment Answer"""
  id: Int!

  """Id of the associated phrasing"""
  phrasing_id: Int!

  """Id of the question"""
  question_id: Int!
}

type AssessmentPhrasing {
  AssessmentAnswers: [AssessmentAnswer!]
  AssessmentQuestion: AssessmentQuestion!

  """Id of the Assessment Phrasing"""
  id: Int!

  """Phrasing of the question"""
  phrasing: String!

  """Id of the question"""
  question_id: Int!

  """Additional info regarding the question"""
  related_info: String!
}

type AssessmentQuestion {
  """Answer type of the question"""
  answer_type: String!
  AssessmentAnswers: [AssessmentAnswer!]
  AssessmentPhrasing: AssessmentPhrasing
  AssessmentPhrasings: [AssessmentPhrasing!]

  """Category of the question"""
  category: String!

  """Id of the current phrasing of the question"""
  current_phrasing_id: Int

  """Enum of the question"""
  enum: String!
  EnumAssessmentAnswers: [EnumAssessmentAnswer!]

  """Id of the Question"""
  id: Int!

  """Info type of the question"""
  info_type: String!

  """Question"""
  question: String!

  """Is the answer to this question required to complete an assessment?"""
  required: Boolean!
}

type Company {
  """Whether this is an active company"""
  active: Boolean!

  """Parent company of the company"""
  child_co: String!

  """Id of the company"""
  id: Int!

  """Name of the company"""
  name: String!

  """Parent company of the company"""
  parent_co: String!

  """Whether this is a test company"""
  test_lead_source: Boolean!
}

type Contact {
  Account_Account_contact_primary_idToContact: [Account!]
  Account_Account_contact_secondary_idToContact: [Account!]

  """Additional location of the contact"""
  additional_location: Int!

  """First email address of the contact"""
  email_one: String!

  """Sencond email address of the contact"""
  email_two: String!
  EnumLeadCampaignDisqualReason: EnumLeadCampaignDisqualReason
  EnumMarketingDisqualReason: EnumMarketingDisqualReason
  EnumSalesDisqualReason: EnumSalesDisqualReason

  """First name of the contact"""
  first_name: String!
  full_name: String!

  """Id of the contact"""
  id: Int!

  """Last name of the contact"""
  last_name: String!

  """Id of the lead campaign disqualification reason"""
  lead_campaign_disqual_reason_id: Int

  """Legal first name of the contact"""
  legal_first_name: String

  """Id of the marketing disqualification reason"""
  marketing_disqual_reason_id: Int

  """Middle name of the contact"""
  middle_name: String

  """Cell phone number of the contact"""
  phone_cell: String!

  """Home phone number of the contact"""
  phone_home: String!

  """Id of the location of the contact"""
  primary_location_id: Int!

  """Id of the sales campaign disqualification reason"""
  sales_disqual_reason_id: Int

  """Suffix of the contact"""
  suffix: String

  """Whether this is a test contact"""
  test_contact: Boolean!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type EnumAssessmentAnswer {
  AssessmentQuestion: AssessmentQuestion

  """Name of the answer choice"""
  choice: String!

  """Id of the answer enum"""
  id: Int!

  """URL of the answer image"""
  image: String

  """Id of the question the answer is for"""
  question_id: Int!
}

type EnumCommunicationType {
  """List of Contacts that have this communication type"""
  Contact: [Contact!]

  """List of Contact Communications that have this communication type"""
  ContactCommunicationLog: [Contact!]

  """Description of the communication type"""
  description: String!

  """Id of the communication type"""
  id: Int!

  """List of Lead Working Events that have this communication type"""
  LeadWorkingEventLog: [Contact!]

  """Name of the communication type"""
  name: String!
}

type EnumLeadCampaignDisqualReason {
  """List of Contacts that have this reason"""
  Contact: [Contact!]

  """Id of the reason"""
  id: Int!

  """List of Leads that have this reason"""
  Lead: [Lead!]

  """Name of the reason"""
  name: String!
}

type EnumLeadWorkingEventDispo {
  """List of Contacts that have this disposition"""
  Contact: [Contact!]

  """Description of the disposition"""
  description: String!

  """Id of the disposition"""
  id: Int!

  """List of Lead Working Events that have this disposition"""
  LeadWorkingEventLog: [Contact!]

  """Name of the disposition"""
  name: String!
}

type EnumMarketingDisqualReason {
  """List of Contacts that have this reason"""
  Contact: [Contact!]

  """Id of the reason"""
  id: Int!

  """List of Leads that have this reason"""
  Lead: [Lead!]

  """Name of the reason"""
  name: String!
}

type EnumSalesDisqualReason {
  """List of Contacts that have this reason"""
  Contact: [Contact!]

  """Id of the reason"""
  id: Int!

  """Name of the reason"""
  name: String!
}

type Lead {
  """First line of lead address"""
  address_one: String

  """Second line of lead address"""
  address_two: String

  """Has the lead's address been verified?"""
  address_verified: Boolean

  """Has the assessment for this lead been completed?"""
  assessment_complete: Boolean

  """City of lead address"""
  city: String

  """Primary email address of the lead"""
  email_one: String

  """Secondary email address of the lead"""
  email_two: String
  EnumLeadCampaignDisqualReason: EnumLeadCampaignDisqualReason
  EnumMarketingDisqualReason: EnumMarketingDisqualReason

  """First name of the lead"""
  first_name: String

  """Gate code of lead address"""
  gate_code: String

  """Id of the lead"""
  id: Int!

  """Last name of the lead"""
  last_name: String

  """Latitude of the location"""
  latitude: String!

  """Id of the lead campaign disqualification reason"""
  lead_campaign_disqual_reason_id: Int

  """Id of the lead campaign"""
  lead_campaign_id: Int

  """Id of the user that converted the lead to an account"""
  lead_converter_id: Int

  """Id of the lead"""
  lead_creator_id: Int

  """"""
  lead_marketing_tag_collection: String
  LeadCampaign: LeadCampaign!
  LeadConverter: User
  LeadCreator: User
  LeadOwner: User

  """Legal first name of the lead"""
  legal_first_name: String

  """Longitude of the location"""
  longitude: String!

  """Whether this lead can be called"""
  marketing_callable: Boolean

  """Id of the marketing disqualification reason"""
  marketing_disqual_reason_id: Int

  """Whether this lead can be emailed"""
  marketing_emailable: Boolean

  """Whether this is marketing qualified"""
  marketing_qualified: Boolean

  """Whether this lead can be texted"""
  marketing_textable: Boolean

  """Middle name of the lead"""
  middle_name: String

  """Cell phone number of lead"""
  phone_cell: String

  """Home phone number of lead"""
  phone_home: String

  """Stage the lead is in"""
  stage: String

  """State of lead address"""
  state_abbr: String

  """Suffix of the lead's name"""
  suffix: String

  """Whether this is a test lead"""
  test_lead: Boolean

  """ZIP code of lead address"""
  zip: String
}

type LeadCampaign {
  """Whether this is an active campaign"""
  active: Boolean!
  Company: Company

  """Id of the company"""
  company_id: Int!

  """Id of the campaign"""
  id: Int!

  """Direction of lead"""
  lead_direction: String!

  """Id of the lead source"""
  lead_source_id: Int!
  LeadSource: LeadSource

  """Name of the campaign"""
  name: String!

  """Whether this is a test lead campaign"""
  test_lead_campaign: Boolean
}

type LeadSource {
  """Whether this is an active source"""
  active: Boolean!

  """Id of the source"""
  id: Int!

  """Name of the source"""
  name: String!

  """Whether this is a test source"""
  test_lead_source: Boolean!

  """Type of the source"""
  type: String!
}

type LeadWorkingEventLog {
  """Id of the communication type of the event"""
  comm_type_id: Int!

  """Communication Type of this log entry"""
  EnumCommunicationType: EnumCommunicationType

  """Disposition of this log entry"""
  EnumLeadWorkingEventDispo: EnumLeadWorkingEventDispo

  """Timestamp of the event"""
  event_timestamp: DateTime!

  """Id of the event"""
  id: Int!

  """Lead assoicated with this event"""
  Lead: Lead

  """Id of the lead this event is for"""
  lead_id: Int!

  """Id of the disposition for this event"""
  lwe_dispo_id: Int!

  """Id of the creator of this event"""
  lwe_log_creator_id: Int!

  """Notes for this event"""
  notes: String!

  """Is this a test log entry?"""
  test_log_entry: Boolean!

  """User that created this log entry"""
  User: User
}

type Location {
  Account_Account_location_idToLocation: [Account!]

  """Whether this is an active source"""
  active: Boolean!

  """Address line 1 of the location"""
  address_one: String!

  """Address line 2 of the location"""
  address_two: String

  """Address city of the location"""
  city: String!
  Contact: Contact

  """Gate code of location"""
  gate_code: String!

  """Id of the location"""
  id: Int!

  """Latitude of the location"""
  latitude: String!

  """Longitude of the location"""
  longitude: String!

  """Address state of the location"""
  state_abbr: String!

  """Whether this is a test location"""
  test_location: Boolean!

  """Address ZIP code of the location"""
  zip: String!
}

type LocationCoords {
  """Fomatted address found"""
  formatted_address: String!

  """Latitude of the address"""
  latitude: Float!

  """Longitude of the address"""
  longitude: Float!
}

type Mutation {
  convertLead(account_creator_id: Int!, advisor_id: Int!, lead_id: Int!, type: String): Account!
  createAssessment(account_id: Int, assessor_id: Int, lead_id: Int): Assessment!
  createAssessmentAnswer(answer: String, assessment_id: Int!, phrasing_id: Int, question_id: Int): AssessmentAnswer!
  createAssessmentPhrasing(phrasing: String, question_id: Int, related_info: String): AssessmentPhrasing!
  createEnumAssessmentAnswer(choice: String, image: String, question_id: Int): EnumAssessmentAnswer!
  createLead(address_one: String, address_two: String, address_verified: Boolean, city: String, email_one: String, email_two: String, first_name: String, gate_code: String, last_name: String, latitude: String, lead_campaign_id: Int, lead_creator_id: Int, lead_owner_id: Int, longitude: String, marketing_qualified: String, phone_cell: String, phone_home: String, stage: String, state_abbr: String, test_lead: Boolean, zip: String): Lead!
  createLWELog(comm_type_id: Int!, lead_id: Int!, lwe_dispo_id: Int!, lwe_log_creator_id: Int!, notes: String, test_log_entry: Boolean): LeadWorkingEventLog
  createUser(name: String): User!
  dynamicAssessmentAnswer(answer: String!, assessment_id: Int!, phrasing_id: Int!, question_id: Int!): AssessmentAnswer!
  updateAssessment(account_id: Int, assessor_id: Int, id: Int!, lead_id: Int): Assessment!
  updateAssessmentAnswer(answer: String, assessment_id: Int, id: Int!, phrasing_id: Int, question_id: Int): AssessmentAnswer!
  updateAssessmentPhrasing(id: Int!, phrasing: String, question_id: Int, related_info: String): AssessmentPhrasing!
  updateEnumAssessmentAnswer(choice: String, id: Int!, image: String, question_id: Int): EnumAssessmentAnswer!
  updateLead(address_one: String, address_two: String, address_verified: Boolean, city: String, email_one: String, email_two: String, first_name: String, gate_code: String, id: Int!, last_name: String, latitude: String, lead_campaign_id: Int, lead_creator_id: Int, lead_owner_id: Int, legal_first_name: String, longitude: String, marketing_qualified: String, middle_name: String, notification_preference_call: Boolean, notification_preference_email: Boolean, notification_preference_text: Boolean, phone_cell: String, phone_home: String, stage: String, state_abbr: String, suffix: String, test_lead: Boolean, zip: String): Lead!
}

type Query {
  account(acct_num: String, id: Int): Account
  accounts(advisor_id: Int, contact_primary_id: Int, contact_secondary_id: Int, from_lead_id: Int, lead_creator_id: Int, location_id: Int, organization_id: Int, status: String, type: String, useOr: Boolean): [Account!]
  assessment(id: Int): Assessment
  assessmentAnswer(id: Int): AssessmentAnswer
  assessmentAnswers(assessment_id: Int, phrasing_id: Int, question_id: Int, useOr: Boolean): [AssessmentAnswer!]
  assessmentPhrasing(id: Int): AssessmentPhrasing
  assessmentPhrasings(assessment_id: Int, phrasing_id: Int, question_id: Int, useOr: Boolean): [AssessmentPhrasing!]
  assessmentQuestion(id: Int): AssessmentQuestion
  assessmentQuestions(answer_type: String, category: String, required: Boolean): [AssessmentQuestion!]
  assessments(account_id: Int, assessor_id: Int, lead_id: Int, useOr: Boolean): [Assessment!]
  coordinatesByAddress(address_one: String, address_two: String, city: String, state_abbr: String, zip: String): LocationCoords
  enumAssessmentAnswer(id: Int): EnumAssessmentAnswer
  enumAssessmentAnswers(question_id: Int): [EnumAssessmentAnswer!]
  lead(email_one: String, id: Int, phone_cell: String): Lead
  leads(address_verified: Boolean, assessment_complete: Boolean, lead_creator_id: Int, lead_owner_id: Int, marketing_qualified: Boolean, useOr: Boolean): [Lead!]
  LWELog(id: Int): LeadWorkingEventLog
  LWELogs(lead_id: Int, test_log_entry: Boolean): [LeadWorkingEventLog!]
  pipeline(address_verified: Boolean, assessment_complete: Boolean, lead_creator_id: Int, marketing_qualified: Boolean, useOr: Boolean): [Lead!]
  role(id: Int!): Role
  salesTeam(id: Int, name: String): SalesTeam
  salesTeams(id: Int, name: String, team_lead_one_id: Int, team_lead_two_id: Int, useOr: Boolean): [SalesTeam!]
  user(email_nerd: String, id: Int): [User!]
  users(email_nerd: String, id: Int): [User!]
  usersByTeam(team_id: Int): [User!]
}

type Role {
  """Default access of the user"""
  default_access: String!

  """Id of the role"""
  id: Int!

  """Name of the role"""
  name: String!

  """Whether this is a test role"""
  test_role: Boolean!
}

type SalesTeam {
  """Whether team is active"""
  active: Boolean!

  """"""
  child_team_id: Int!

  """Id of the team"""
  id: Int!

  """Name of the team"""
  name: String!

  """Office of the team"""
  Office: User

  """Office where team is based"""
  office_id: String!

  """"""
  parent_team_id: Int!

  """Id of the first team lead"""
  team_lead_one_id: Int!

  """Id of the second team lead"""
  team_lead_two_id: Int!

  """Whether this is a test team"""
  test_sales_team: Boolean!

  """Team type"""
  type: String!
  User_SalesTeam_team_lead_one_idToUser: User

  """Memebers of the team"""
  User_SalesTeamToUser_team_id: [User!]
}

type User {
  """Access of the user"""
  access: String!

  """Address line 1 of the user"""
  address_one: String!

  """Address line 2 of the user"""
  address_two: String!

  """Area Id of the user"""
  area_id: Int!

  """Link to avatar of user"""
  avatar_link: String

  """Address city of the user"""
  city: String!
  Company: Company

  """Id of the user's company"""
  company_id: Int!

  """User that created the user"""
  created_by: Int!

  """Work email address of the user"""
  email_nerd: String!

  """Personal email address of the user"""
  email_personal: String!

  """Employment status of the user"""
  employment_status: Boolean!

  """Type of user"""
  enitity_type: String!

  """First name of the user"""
  first_name: String!
  full_name: String!

  """Id of the user"""
  id: Int!

  """Last name of the user"""
  last_name: String!

  """Payroll Id of the user"""
  payroll_id: Int!

  """Cell phone number of user"""
  phone_cell: String!

  """Cellular carrier of the user"""
  phone_cell_carrier: String!

  """Home phone number of the user"""
  phone_home: String!

  """Preferred first name of the user"""
  preferred_first_name: String!

  """User that referred the user"""
  referred_by: Int!
  Role: Role

  """Id of the user's role"""
  role_id: Int!

  """Sales Team user belongs to"""
  SalesTeams_SalesTeamsToUsers_team_id: SalesTeam

  """Security PIN of the user"""
  security_pin: Int!

  """Address state of the user"""
  state_abbr: String!

  """Suffix of the user's name"""
  suffix: String!

  """Id of the user's team"""
  team_id: Int!

  """"""
  team_position_id: Int!

  """Test user indicator"""
  test_user: Boolean!

  """"""
  third_party_ids: Int!

  """Address ZIP code of the user"""
  zip: String!
}
